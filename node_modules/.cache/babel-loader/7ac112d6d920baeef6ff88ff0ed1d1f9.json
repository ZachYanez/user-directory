{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.type = type;\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _utils = require(\"./utils\");\n\nvar _click = require(\"./click\");\n\nvar _navigationKey = require(\"./keys/navigation-key\"); // TODO: wrap in asyncWrapper\n\n\nconst modifierCallbackMap = { ...createModifierCallbackEntries({\n    name: 'shift',\n    key: 'Shift',\n    keyCode: 16,\n    modifierProperty: 'shiftKey'\n  }),\n  ...createModifierCallbackEntries({\n    name: 'ctrl',\n    key: 'Control',\n    keyCode: 17,\n    modifierProperty: 'ctrlKey'\n  }),\n  ...createModifierCallbackEntries({\n    name: 'alt',\n    key: 'Alt',\n    keyCode: 18,\n    modifierProperty: 'altKey'\n  }),\n  ...createModifierCallbackEntries({\n    name: 'meta',\n    key: 'Meta',\n    keyCode: 93,\n    modifierProperty: 'metaKey'\n  }),\n  // capslock is inline because of the need to fire both keydown and keyup on use, while preserving the modifier state.\n  '{capslock}': function ({\n    currentElement,\n    eventOverrides\n  }) {\n    const newEventOverrides = {\n      modifierCapsLock: true\n    };\n\n    _dom.fireEvent.keyDown(currentElement(), {\n      key: 'CapsLock',\n      keyCode: 20,\n      which: 20,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n\n    _dom.fireEvent.keyUp(currentElement(), {\n      key: 'CapsLock',\n      keyCode: 20,\n      which: 20,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n\n    return {\n      eventOverrides: newEventOverrides\n    };\n  },\n  '{/capslock}': function ({\n    currentElement,\n    eventOverrides\n  }) {\n    const newEventOverrides = {\n      modifierCapsLock: false\n    };\n\n    _dom.fireEvent.keyDown(currentElement(), {\n      key: 'CapsLock',\n      keyCode: 20,\n      which: 20,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n\n    _dom.fireEvent.keyUp(currentElement(), {\n      key: 'CapsLock',\n      keyCode: 20,\n      which: 20,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n\n    return {\n      eventOverrides: newEventOverrides\n    };\n  }\n};\nconst specialCharCallbackMap = {\n  '{arrowleft}': (0, _navigationKey.navigationKey)('ArrowLeft'),\n  '{arrowright}': (0, _navigationKey.navigationKey)('ArrowRight'),\n  '{arrowdown}': handleArrowDown,\n  '{arrowup}': handleArrowUp,\n  '{enter}': handleEnter,\n  '{esc}': handleEsc,\n  '{del}': handleDel,\n  '{backspace}': handleBackspace,\n  '{selectall}': handleSelectall,\n  '{space}': handleSpace,\n  ' ': handleSpace\n};\n\nfunction wait(time) {\n  return new Promise(resolve => setTimeout(() => resolve(), time));\n} // this needs to be wrapped in the event/asyncWrapper for React's act and angular's change detection\n// depending on whether it will be async.\n\n\nasync function type(element, text, {\n  delay = 0,\n  ...options\n} = {}) {\n  // we do not want to wrap in the asyncWrapper if we're not\n  // going to actually be doing anything async, so we only wrap\n  // if the delay is greater than 0\n  let result;\n\n  if (delay > 0) {\n    await (0, _dom.getConfig)().asyncWrapper(async () => {\n      result = await typeImpl(element, text, {\n        delay,\n        ...options\n      });\n    });\n  } else {\n    result = typeImpl(element, text, {\n      delay,\n      ...options\n    });\n  }\n\n  return result;\n}\n\nasync function typeImpl(element, text, {\n  delay,\n  skipClick = false,\n  skipAutoClose = false,\n  initialSelectionStart,\n  initialSelectionEnd\n}) {\n  if (element.disabled) return;\n  if (!skipClick) (0, _click.click)(element);\n\n  if ((0, _utils.isContentEditable)(element) && document.getSelection().rangeCount === 0) {\n    const range = document.createRange();\n    range.setStart(element, 0);\n    range.setEnd(element, 0);\n    document.getSelection().addRange(range);\n  } // The focused element could change between each event, so get the currently active element each time\n\n\n  const currentElement = () => (0, _utils.getActiveElement)(element.ownerDocument); // by default, a new element has it's selection start and end at 0\n  // but most of the time when people call \"type\", they expect it to type\n  // at the end of the current input value. So, if the selection start\n  // and end are both the default of 0, then we'll go ahead and change\n  // them to the length of the current value.\n  // the only time it would make sense to pass the initialSelectionStart or\n  // initialSelectionEnd is if you have an input with a value and want to\n  // explicitely start typing with the cursor at 0. Not super common.\n\n\n  const value = (0, _utils.getValue)(currentElement());\n  const {\n    selectionStart,\n    selectionEnd\n  } = (0, _utils.getSelectionRange)(element);\n\n  if (value != null && selectionStart === 0 && selectionEnd === 0) {\n    (0, _utils.setSelectionRangeIfNecessary)(currentElement(), initialSelectionStart != null ? initialSelectionStart : value.length, initialSelectionEnd != null ? initialSelectionEnd : value.length);\n  }\n\n  const eventCallbacks = function () {\n    const callbacks = [];\n    let remainingString = text;\n\n    while (remainingString) {\n      const {\n        callback,\n        remainingString: newRemainingString\n      } = getNextCallback(remainingString, skipAutoClose);\n      callbacks.push(callback);\n      remainingString = newRemainingString;\n    }\n\n    return callbacks;\n  }();\n\n  await async function (callbacks) {\n    const eventOverrides = {};\n    let prevWasMinus, prevWasPeriod, prevValue, typedValue;\n\n    for (const callback of callbacks) {\n      if (delay > 0) await wait(delay);\n\n      if (!currentElement().disabled) {\n        const returnValue = callback({\n          currentElement,\n          prevWasMinus,\n          prevWasPeriod,\n          prevValue,\n          eventOverrides,\n          typedValue\n        });\n        Object.assign(eventOverrides, returnValue == null ? void 0 : returnValue.eventOverrides);\n        prevWasMinus = returnValue == null ? void 0 : returnValue.prevWasMinus;\n        prevWasPeriod = returnValue == null ? void 0 : returnValue.prevWasPeriod;\n        prevValue = returnValue == null ? void 0 : returnValue.prevValue;\n        typedValue = returnValue == null ? void 0 : returnValue.typedValue;\n      }\n    }\n  }(eventCallbacks);\n}\n\nfunction getNextCallback(remainingString, skipAutoClose) {\n  const modifierCallback = getModifierCallback(remainingString, skipAutoClose);\n\n  if (modifierCallback) {\n    return modifierCallback;\n  }\n\n  const specialCharCallback = getSpecialCharCallback(remainingString);\n\n  if (specialCharCallback) {\n    return specialCharCallback;\n  }\n\n  return getTypeCallback(remainingString);\n}\n\nfunction getModifierCallback(remainingString, skipAutoClose) {\n  const modifierKey = Object.keys(modifierCallbackMap).find(key => remainingString.startsWith(key));\n\n  if (!modifierKey) {\n    return null;\n  }\n\n  const callback = modifierCallbackMap[modifierKey]; // if this modifier has an associated \"close\" callback and the developer\n  // doesn't close it themselves, then we close it for them automatically\n  // Effectively if they send in: '{alt}a' then we type: '{alt}a{/alt}'\n\n  if (!skipAutoClose && callback.closeName && !remainingString.includes(callback.closeName)) {\n    remainingString += callback.closeName;\n  }\n\n  remainingString = remainingString.slice(modifierKey.length);\n  return {\n    callback,\n    remainingString\n  };\n}\n\nfunction getSpecialCharCallback(remainingString) {\n  const specialChar = Object.keys(specialCharCallbackMap).find(key => remainingString.startsWith(key));\n\n  if (!specialChar) {\n    return null;\n  }\n\n  return {\n    callback: specialCharCallbackMap[specialChar],\n    remainingString: remainingString.slice(specialChar.length)\n  };\n}\n\nfunction getTypeCallback(remainingString) {\n  const character = remainingString[0];\n  return {\n    callback: context => typeCharacter(character, context),\n    remainingString: remainingString.slice(1)\n  };\n}\n\nfunction setSelectionRange({\n  currentElement,\n  newValue,\n  newSelectionStart\n}) {\n  // if we *can* change the selection start, then we will if the new value\n  // is the same as the current value (so it wasn't programatically changed\n  // when the fireEvent.input was triggered).\n  // The reason we have to do this at all is because it actually *is*\n  // programmatically changed by fireEvent.input, so we have to simulate the\n  // browser's default behavior\n  const value = (0, _utils.getValue)(currentElement());\n\n  if (value === newValue) {\n    (0, _utils.setSelectionRangeIfNecessary)(currentElement(), newSelectionStart, newSelectionStart);\n  } else {\n    // If the currentValue is different than the expected newValue and we *can*\n    // change the selection range, than we should set it to the length of the\n    // currentValue to ensure that the browser behavior is mimicked.\n    (0, _utils.setSelectionRangeIfNecessary)(currentElement(), value.length, value.length);\n  }\n}\n\nfunction fireInputEventIfNeeded({\n  currentElement,\n  newValue,\n  newSelectionStart,\n  eventOverrides\n}) {\n  const prevValue = (0, _utils.getValue)(currentElement());\n\n  if (!currentElement().readOnly && !(0, _utils.isClickable)(currentElement()) && newValue !== prevValue) {\n    if ((0, _utils.isContentEditable)(currentElement())) {\n      _dom.fireEvent.input(currentElement(), {\n        target: {\n          textContent: newValue\n        },\n        ...eventOverrides\n      });\n    } else {\n      _dom.fireEvent.input(currentElement(), {\n        target: {\n          value: newValue\n        },\n        ...eventOverrides\n      });\n    }\n\n    setSelectionRange({\n      currentElement,\n      newValue,\n      newSelectionStart\n    });\n  }\n\n  return {\n    prevValue\n  };\n}\n\nfunction typeCharacter(char, {\n  currentElement,\n  prevWasMinus = false,\n  prevWasPeriod = false,\n  prevValue = '',\n  typedValue = '',\n  eventOverrides\n}) {\n  const key = char; // TODO: check if this also valid for characters with diacritic markers e.g. úé etc\n\n  const keyCode = char.charCodeAt(0);\n  let nextPrevWasMinus, nextPrevWasPeriod;\n  const textToBeTyped = typedValue + char;\n\n  const keyDownDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  if (keyDownDefaultNotPrevented) {\n    const keyPressDefaultNotPrevented = _dom.fireEvent.keyPress(currentElement(), {\n      key,\n      keyCode,\n      charCode: keyCode,\n      ...eventOverrides\n    });\n\n    if ((0, _utils.getValue)(currentElement()) != null && keyPressDefaultNotPrevented) {\n      let newEntry = char;\n\n      if (prevWasMinus) {\n        newEntry = `-${char}`;\n      } else if (prevWasPeriod) {\n        newEntry = `${prevValue}.${char}`;\n      }\n\n      if ((0, _utils.isValidDateValue)(currentElement(), textToBeTyped)) {\n        newEntry = textToBeTyped;\n      }\n\n      const timeNewEntry = (0, _utils.buildTimeValue)(textToBeTyped);\n\n      if ((0, _utils.isValidInputTimeValue)(currentElement(), timeNewEntry)) {\n        newEntry = timeNewEntry;\n      }\n\n      const inputEvent = fireInputEventIfNeeded({ ...(0, _utils.calculateNewValue)(newEntry, currentElement()),\n        eventOverrides: {\n          data: key,\n          inputType: 'insertText',\n          ...eventOverrides\n        },\n        currentElement\n      });\n      prevValue = inputEvent.prevValue;\n\n      if ((0, _utils.isValidDateValue)(currentElement(), textToBeTyped)) {\n        _dom.fireEvent.change(currentElement(), {\n          target: {\n            value: textToBeTyped\n          }\n        });\n      }\n\n      fireChangeForInputTimeIfValid(currentElement, prevValue, timeNewEntry); // typing \"-\" into a number input will not actually update the value\n      // so for the next character we type, the value should be set to\n      // `-${newEntry}`\n      // we also preserve the prevWasMinus when the value is unchanged due\n      // to typing an invalid character (typing \"-a3\" results in \"-3\")\n      // same applies for the decimal character.\n\n      if (currentElement().type === 'number') {\n        const newValue = (0, _utils.getValue)(currentElement());\n\n        if (newValue === prevValue && newEntry !== '-') {\n          nextPrevWasMinus = prevWasMinus;\n        } else {\n          nextPrevWasMinus = newEntry === '-';\n        }\n\n        if (newValue === prevValue && newEntry !== '.') {\n          nextPrevWasPeriod = prevWasPeriod;\n        } else {\n          nextPrevWasPeriod = newEntry === '.';\n        }\n      }\n    }\n  }\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  return {\n    prevWasMinus: nextPrevWasMinus,\n    prevWasPeriod: nextPrevWasPeriod,\n    prevValue,\n    typedValue: textToBeTyped\n  };\n}\n\nfunction fireChangeForInputTimeIfValid(currentElement, prevValue, timeNewEntry) {\n  if ((0, _utils.isValidInputTimeValue)(currentElement(), timeNewEntry) && prevValue !== timeNewEntry) {\n    _dom.fireEvent.change(currentElement(), {\n      target: {\n        value: timeNewEntry\n      }\n    });\n  }\n} // yes, calculateNewBackspaceValue and calculateNewValue look extremely similar\n// and you may be tempted to create a shared abstraction.\n// If you, brave soul, decide to so endevor, please increment this count\n// when you inevitably fail: 1\n\n\nfunction calculateNewBackspaceValue(element) {\n  const {\n    selectionStart,\n    selectionEnd\n  } = (0, _utils.getSelectionRange)(element);\n  const value = (0, _utils.getValue)(element);\n  let newValue, newSelectionStart;\n\n  if (selectionStart === null) {\n    // at the end of an input type that does not support selection ranges\n    // https://github.com/testing-library/user-event/issues/316#issuecomment-639744793\n    newValue = value.slice(0, value.length - 1);\n    newSelectionStart = selectionStart - 1;\n  } else if (selectionStart === selectionEnd) {\n    if (selectionStart === 0) {\n      // at the beginning of the input\n      newValue = value;\n      newSelectionStart = selectionStart;\n    } else if (selectionStart === value.length) {\n      // at the end of the input\n      newValue = value.slice(0, value.length - 1);\n      newSelectionStart = selectionStart - 1;\n    } else {\n      // in the middle of the input\n      newValue = value.slice(0, selectionStart - 1) + value.slice(selectionEnd);\n      newSelectionStart = selectionStart - 1;\n    }\n  } else {\n    // we have something selected\n    const firstPart = value.slice(0, selectionStart);\n    newValue = firstPart + value.slice(selectionEnd);\n    newSelectionStart = firstPart.length;\n  }\n\n  return {\n    newValue,\n    newSelectionStart\n  };\n}\n\nfunction calculateNewDeleteValue(element) {\n  const {\n    selectionStart,\n    selectionEnd\n  } = (0, _utils.getSelectionRange)(element);\n  const value = (0, _utils.getValue)(element);\n  let newValue;\n\n  if (selectionStart === null) {\n    // at the end of an input type that does not support selection ranges\n    // https://github.com/testing-library/user-event/issues/316#issuecomment-639744793\n    newValue = value;\n  } else if (selectionStart === selectionEnd) {\n    if (selectionStart === 0) {\n      // at the beginning of the input\n      newValue = value.slice(1);\n    } else if (selectionStart === value.length) {\n      // at the end of the input\n      newValue = value;\n    } else {\n      // in the middle of the input\n      newValue = value.slice(0, selectionStart) + value.slice(selectionEnd + 1);\n    }\n  } else {\n    // we have something selected\n    const firstPart = value.slice(0, selectionStart);\n    newValue = firstPart + value.slice(selectionEnd);\n  }\n\n  return {\n    newValue,\n    newSelectionStart: selectionStart\n  };\n}\n\nfunction createModifierCallbackEntries({\n  name,\n  key,\n  keyCode,\n  modifierProperty\n}) {\n  const closeName = `{/${name}}`;\n\n  function open({\n    currentElement,\n    eventOverrides\n  }) {\n    const newEventOverrides = {\n      [modifierProperty]: true\n    };\n\n    _dom.fireEvent.keyDown(currentElement(), {\n      key,\n      keyCode,\n      which: keyCode,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n\n    return {\n      eventOverrides: newEventOverrides\n    };\n  }\n\n  open.closeName = closeName;\n  return {\n    [`{${name}}`]: open,\n    [closeName]: function ({\n      currentElement,\n      eventOverrides\n    }) {\n      const newEventOverrides = {\n        [modifierProperty]: false\n      };\n\n      _dom.fireEvent.keyUp(currentElement(), {\n        key,\n        keyCode,\n        which: keyCode,\n        ...eventOverrides,\n        ...newEventOverrides\n      });\n\n      return {\n        eventOverrides: newEventOverrides\n      };\n    }\n  };\n}\n\nfunction handleEnter({\n  currentElement,\n  eventOverrides\n}) {\n  const key = 'Enter';\n  const keyCode = 13;\n\n  const keyDownDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  if (keyDownDefaultNotPrevented) {\n    const keyPressDefaultNotPrevented = _dom.fireEvent.keyPress(currentElement(), {\n      key,\n      keyCode,\n      charCode: keyCode,\n      ...eventOverrides\n    });\n\n    if (keyPressDefaultNotPrevented) {\n      if ((0, _utils.isClickable)(currentElement())) {\n        _dom.fireEvent.click(currentElement(), { ...eventOverrides\n        });\n      }\n\n      if (currentElement().tagName === 'TEXTAREA') {\n        const {\n          newValue,\n          newSelectionStart\n        } = (0, _utils.calculateNewValue)('\\n', currentElement());\n\n        _dom.fireEvent.input(currentElement(), {\n          target: {\n            value: newValue\n          },\n          inputType: 'insertLineBreak',\n          ...eventOverrides\n        });\n\n        setSelectionRange({\n          currentElement,\n          newValue,\n          newSelectionStart\n        });\n      }\n\n      if (currentElement().tagName === 'INPUT' && currentElement().form && (currentElement().form.querySelectorAll('input').length === 1 || currentElement().form.querySelector('input[type=\"submit\"]') || currentElement().form.querySelector('button[type=\"submit\"]'))) {\n        _dom.fireEvent.submit(currentElement().form);\n      }\n    }\n  }\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\n\nfunction handleEsc({\n  currentElement,\n  eventOverrides\n}) {\n  const key = 'Escape';\n  const keyCode = 27;\n\n  _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  }); // NOTE: Browsers do not fire a keypress on meta key presses\n\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\n\nfunction handleDel({\n  currentElement,\n  eventOverrides\n}) {\n  const key = 'Delete';\n  const keyCode = 46;\n\n  const keyPressDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  if (keyPressDefaultNotPrevented) {\n    fireInputEventIfNeeded({ ...calculateNewDeleteValue(currentElement()),\n      eventOverrides: {\n        inputType: 'deleteContentForward',\n        ...eventOverrides\n      },\n      currentElement\n    });\n  }\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\n\nfunction handleBackspace({\n  currentElement,\n  eventOverrides\n}) {\n  const key = 'Backspace';\n  const keyCode = 8;\n\n  const keyPressDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  if (keyPressDefaultNotPrevented) {\n    fireInputEventIfNeeded({ ...calculateNewBackspaceValue(currentElement()),\n      eventOverrides: {\n        inputType: 'deleteContentBackward',\n        ...eventOverrides\n      },\n      currentElement\n    });\n  }\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\n\nfunction handleSelectall({\n  currentElement\n}) {\n  currentElement().setSelectionRange(0, (0, _utils.getValue)(currentElement()).length);\n}\n\nfunction handleSpace(context) {\n  if ((0, _utils.isClickable)(context.currentElement())) {\n    handleSpaceOnClickable(context);\n    return;\n  }\n\n  typeCharacter(' ', context);\n}\n\nfunction handleSpaceOnClickable({\n  currentElement,\n  eventOverrides\n}) {\n  const key = ' ';\n  const keyCode = 32;\n\n  const keyDownDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  if (keyDownDefaultNotPrevented) {\n    _dom.fireEvent.keyPress(currentElement(), {\n      key,\n      keyCode,\n      charCode: keyCode,\n      ...eventOverrides\n    });\n  }\n\n  const keyUpDefaultNotPrevented = _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  if (keyDownDefaultNotPrevented && keyUpDefaultNotPrevented) {\n    _dom.fireEvent.click(currentElement(), { ...eventOverrides\n    });\n  }\n}\n\nfunction handleArrowDown({\n  currentElement,\n  eventOverrides\n}) {\n  const key = 'ArrowDown';\n  const keyCode = 40;\n\n  _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\n\nfunction handleArrowUp({\n  currentElement,\n  eventOverrides\n}) {\n  const key = 'ArrowUp';\n  const keyCode = 38;\n\n  _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}","map":{"version":3,"sources":["/Users/zacharyyanez/bootcamp/user-directory/user-directory/node_modules/@testing-library/user-event/dist/type.js"],"names":["Object","defineProperty","exports","value","type","_dom","require","_utils","_click","_navigationKey","modifierCallbackMap","createModifierCallbackEntries","name","key","keyCode","modifierProperty","currentElement","eventOverrides","newEventOverrides","modifierCapsLock","fireEvent","keyDown","which","keyUp","specialCharCallbackMap","navigationKey","handleArrowDown","handleArrowUp","handleEnter","handleEsc","handleDel","handleBackspace","handleSelectall","handleSpace","wait","time","Promise","resolve","setTimeout","element","text","delay","options","result","getConfig","asyncWrapper","typeImpl","skipClick","skipAutoClose","initialSelectionStart","initialSelectionEnd","disabled","click","isContentEditable","document","getSelection","rangeCount","range","createRange","setStart","setEnd","addRange","getActiveElement","ownerDocument","getValue","selectionStart","selectionEnd","getSelectionRange","setSelectionRangeIfNecessary","length","eventCallbacks","callbacks","remainingString","callback","newRemainingString","getNextCallback","push","prevWasMinus","prevWasPeriod","prevValue","typedValue","returnValue","assign","modifierCallback","getModifierCallback","specialCharCallback","getSpecialCharCallback","getTypeCallback","modifierKey","keys","find","startsWith","closeName","includes","slice","specialChar","character","context","typeCharacter","setSelectionRange","newValue","newSelectionStart","fireInputEventIfNeeded","readOnly","isClickable","input","target","textContent","char","charCodeAt","nextPrevWasMinus","nextPrevWasPeriod","textToBeTyped","keyDownDefaultNotPrevented","keyPressDefaultNotPrevented","keyPress","charCode","newEntry","isValidDateValue","timeNewEntry","buildTimeValue","isValidInputTimeValue","inputEvent","calculateNewValue","data","inputType","change","fireChangeForInputTimeIfValid","calculateNewBackspaceValue","firstPart","calculateNewDeleteValue","open","tagName","form","querySelectorAll","querySelector","submit","handleSpaceOnClickable","keyUpDefaultNotPrevented"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.type = type;\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _utils = require(\"./utils\");\n\nvar _click = require(\"./click\");\n\nvar _navigationKey = require(\"./keys/navigation-key\");\n\n// TODO: wrap in asyncWrapper\nconst modifierCallbackMap = { ...createModifierCallbackEntries({\n    name: 'shift',\n    key: 'Shift',\n    keyCode: 16,\n    modifierProperty: 'shiftKey'\n  }),\n  ...createModifierCallbackEntries({\n    name: 'ctrl',\n    key: 'Control',\n    keyCode: 17,\n    modifierProperty: 'ctrlKey'\n  }),\n  ...createModifierCallbackEntries({\n    name: 'alt',\n    key: 'Alt',\n    keyCode: 18,\n    modifierProperty: 'altKey'\n  }),\n  ...createModifierCallbackEntries({\n    name: 'meta',\n    key: 'Meta',\n    keyCode: 93,\n    modifierProperty: 'metaKey'\n  }),\n  // capslock is inline because of the need to fire both keydown and keyup on use, while preserving the modifier state.\n  '{capslock}': function ({\n    currentElement,\n    eventOverrides\n  }) {\n    const newEventOverrides = {\n      modifierCapsLock: true\n    };\n\n    _dom.fireEvent.keyDown(currentElement(), {\n      key: 'CapsLock',\n      keyCode: 20,\n      which: 20,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n\n    _dom.fireEvent.keyUp(currentElement(), {\n      key: 'CapsLock',\n      keyCode: 20,\n      which: 20,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n\n    return {\n      eventOverrides: newEventOverrides\n    };\n  },\n  '{/capslock}': function ({\n    currentElement,\n    eventOverrides\n  }) {\n    const newEventOverrides = {\n      modifierCapsLock: false\n    };\n\n    _dom.fireEvent.keyDown(currentElement(), {\n      key: 'CapsLock',\n      keyCode: 20,\n      which: 20,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n\n    _dom.fireEvent.keyUp(currentElement(), {\n      key: 'CapsLock',\n      keyCode: 20,\n      which: 20,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n\n    return {\n      eventOverrides: newEventOverrides\n    };\n  }\n};\nconst specialCharCallbackMap = {\n  '{arrowleft}': (0, _navigationKey.navigationKey)('ArrowLeft'),\n  '{arrowright}': (0, _navigationKey.navigationKey)('ArrowRight'),\n  '{arrowdown}': handleArrowDown,\n  '{arrowup}': handleArrowUp,\n  '{enter}': handleEnter,\n  '{esc}': handleEsc,\n  '{del}': handleDel,\n  '{backspace}': handleBackspace,\n  '{selectall}': handleSelectall,\n  '{space}': handleSpace,\n  ' ': handleSpace\n};\n\nfunction wait(time) {\n  return new Promise(resolve => setTimeout(() => resolve(), time));\n} // this needs to be wrapped in the event/asyncWrapper for React's act and angular's change detection\n// depending on whether it will be async.\n\n\nasync function type(element, text, {\n  delay = 0,\n  ...options\n} = {}) {\n  // we do not want to wrap in the asyncWrapper if we're not\n  // going to actually be doing anything async, so we only wrap\n  // if the delay is greater than 0\n  let result;\n\n  if (delay > 0) {\n    await (0, _dom.getConfig)().asyncWrapper(async () => {\n      result = await typeImpl(element, text, {\n        delay,\n        ...options\n      });\n    });\n  } else {\n    result = typeImpl(element, text, {\n      delay,\n      ...options\n    });\n  }\n\n  return result;\n}\n\nasync function typeImpl(element, text, {\n  delay,\n  skipClick = false,\n  skipAutoClose = false,\n  initialSelectionStart,\n  initialSelectionEnd\n}) {\n  if (element.disabled) return;\n  if (!skipClick) (0, _click.click)(element);\n\n  if ((0, _utils.isContentEditable)(element) && document.getSelection().rangeCount === 0) {\n    const range = document.createRange();\n    range.setStart(element, 0);\n    range.setEnd(element, 0);\n    document.getSelection().addRange(range);\n  } // The focused element could change between each event, so get the currently active element each time\n\n\n  const currentElement = () => (0, _utils.getActiveElement)(element.ownerDocument); // by default, a new element has it's selection start and end at 0\n  // but most of the time when people call \"type\", they expect it to type\n  // at the end of the current input value. So, if the selection start\n  // and end are both the default of 0, then we'll go ahead and change\n  // them to the length of the current value.\n  // the only time it would make sense to pass the initialSelectionStart or\n  // initialSelectionEnd is if you have an input with a value and want to\n  // explicitely start typing with the cursor at 0. Not super common.\n\n\n  const value = (0, _utils.getValue)(currentElement());\n  const {\n    selectionStart,\n    selectionEnd\n  } = (0, _utils.getSelectionRange)(element);\n\n  if (value != null && selectionStart === 0 && selectionEnd === 0) {\n    (0, _utils.setSelectionRangeIfNecessary)(currentElement(), initialSelectionStart != null ? initialSelectionStart : value.length, initialSelectionEnd != null ? initialSelectionEnd : value.length);\n  }\n\n  const eventCallbacks = function () {\n    const callbacks = [];\n    let remainingString = text;\n\n    while (remainingString) {\n      const {\n        callback,\n        remainingString: newRemainingString\n      } = getNextCallback(remainingString, skipAutoClose);\n      callbacks.push(callback);\n      remainingString = newRemainingString;\n    }\n\n    return callbacks;\n  }();\n\n  await async function (callbacks) {\n    const eventOverrides = {};\n    let prevWasMinus, prevWasPeriod, prevValue, typedValue;\n\n    for (const callback of callbacks) {\n      if (delay > 0) await wait(delay);\n\n      if (!currentElement().disabled) {\n        const returnValue = callback({\n          currentElement,\n          prevWasMinus,\n          prevWasPeriod,\n          prevValue,\n          eventOverrides,\n          typedValue\n        });\n        Object.assign(eventOverrides, returnValue == null ? void 0 : returnValue.eventOverrides);\n        prevWasMinus = returnValue == null ? void 0 : returnValue.prevWasMinus;\n        prevWasPeriod = returnValue == null ? void 0 : returnValue.prevWasPeriod;\n        prevValue = returnValue == null ? void 0 : returnValue.prevValue;\n        typedValue = returnValue == null ? void 0 : returnValue.typedValue;\n      }\n    }\n  }(eventCallbacks);\n}\n\nfunction getNextCallback(remainingString, skipAutoClose) {\n  const modifierCallback = getModifierCallback(remainingString, skipAutoClose);\n\n  if (modifierCallback) {\n    return modifierCallback;\n  }\n\n  const specialCharCallback = getSpecialCharCallback(remainingString);\n\n  if (specialCharCallback) {\n    return specialCharCallback;\n  }\n\n  return getTypeCallback(remainingString);\n}\n\nfunction getModifierCallback(remainingString, skipAutoClose) {\n  const modifierKey = Object.keys(modifierCallbackMap).find(key => remainingString.startsWith(key));\n\n  if (!modifierKey) {\n    return null;\n  }\n\n  const callback = modifierCallbackMap[modifierKey]; // if this modifier has an associated \"close\" callback and the developer\n  // doesn't close it themselves, then we close it for them automatically\n  // Effectively if they send in: '{alt}a' then we type: '{alt}a{/alt}'\n\n  if (!skipAutoClose && callback.closeName && !remainingString.includes(callback.closeName)) {\n    remainingString += callback.closeName;\n  }\n\n  remainingString = remainingString.slice(modifierKey.length);\n  return {\n    callback,\n    remainingString\n  };\n}\n\nfunction getSpecialCharCallback(remainingString) {\n  const specialChar = Object.keys(specialCharCallbackMap).find(key => remainingString.startsWith(key));\n\n  if (!specialChar) {\n    return null;\n  }\n\n  return {\n    callback: specialCharCallbackMap[specialChar],\n    remainingString: remainingString.slice(specialChar.length)\n  };\n}\n\nfunction getTypeCallback(remainingString) {\n  const character = remainingString[0];\n  return {\n    callback: context => typeCharacter(character, context),\n    remainingString: remainingString.slice(1)\n  };\n}\n\nfunction setSelectionRange({\n  currentElement,\n  newValue,\n  newSelectionStart\n}) {\n  // if we *can* change the selection start, then we will if the new value\n  // is the same as the current value (so it wasn't programatically changed\n  // when the fireEvent.input was triggered).\n  // The reason we have to do this at all is because it actually *is*\n  // programmatically changed by fireEvent.input, so we have to simulate the\n  // browser's default behavior\n  const value = (0, _utils.getValue)(currentElement());\n\n  if (value === newValue) {\n    (0, _utils.setSelectionRangeIfNecessary)(currentElement(), newSelectionStart, newSelectionStart);\n  } else {\n    // If the currentValue is different than the expected newValue and we *can*\n    // change the selection range, than we should set it to the length of the\n    // currentValue to ensure that the browser behavior is mimicked.\n    (0, _utils.setSelectionRangeIfNecessary)(currentElement(), value.length, value.length);\n  }\n}\n\nfunction fireInputEventIfNeeded({\n  currentElement,\n  newValue,\n  newSelectionStart,\n  eventOverrides\n}) {\n  const prevValue = (0, _utils.getValue)(currentElement());\n\n  if (!currentElement().readOnly && !(0, _utils.isClickable)(currentElement()) && newValue !== prevValue) {\n    if ((0, _utils.isContentEditable)(currentElement())) {\n      _dom.fireEvent.input(currentElement(), {\n        target: {\n          textContent: newValue\n        },\n        ...eventOverrides\n      });\n    } else {\n      _dom.fireEvent.input(currentElement(), {\n        target: {\n          value: newValue\n        },\n        ...eventOverrides\n      });\n    }\n\n    setSelectionRange({\n      currentElement,\n      newValue,\n      newSelectionStart\n    });\n  }\n\n  return {\n    prevValue\n  };\n}\n\nfunction typeCharacter(char, {\n  currentElement,\n  prevWasMinus = false,\n  prevWasPeriod = false,\n  prevValue = '',\n  typedValue = '',\n  eventOverrides\n}) {\n  const key = char; // TODO: check if this also valid for characters with diacritic markers e.g. úé etc\n\n  const keyCode = char.charCodeAt(0);\n  let nextPrevWasMinus, nextPrevWasPeriod;\n  const textToBeTyped = typedValue + char;\n\n  const keyDownDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  if (keyDownDefaultNotPrevented) {\n    const keyPressDefaultNotPrevented = _dom.fireEvent.keyPress(currentElement(), {\n      key,\n      keyCode,\n      charCode: keyCode,\n      ...eventOverrides\n    });\n\n    if ((0, _utils.getValue)(currentElement()) != null && keyPressDefaultNotPrevented) {\n      let newEntry = char;\n\n      if (prevWasMinus) {\n        newEntry = `-${char}`;\n      } else if (prevWasPeriod) {\n        newEntry = `${prevValue}.${char}`;\n      }\n\n      if ((0, _utils.isValidDateValue)(currentElement(), textToBeTyped)) {\n        newEntry = textToBeTyped;\n      }\n\n      const timeNewEntry = (0, _utils.buildTimeValue)(textToBeTyped);\n\n      if ((0, _utils.isValidInputTimeValue)(currentElement(), timeNewEntry)) {\n        newEntry = timeNewEntry;\n      }\n\n      const inputEvent = fireInputEventIfNeeded({ ...(0, _utils.calculateNewValue)(newEntry, currentElement()),\n        eventOverrides: {\n          data: key,\n          inputType: 'insertText',\n          ...eventOverrides\n        },\n        currentElement\n      });\n      prevValue = inputEvent.prevValue;\n\n      if ((0, _utils.isValidDateValue)(currentElement(), textToBeTyped)) {\n        _dom.fireEvent.change(currentElement(), {\n          target: {\n            value: textToBeTyped\n          }\n        });\n      }\n\n      fireChangeForInputTimeIfValid(currentElement, prevValue, timeNewEntry); // typing \"-\" into a number input will not actually update the value\n      // so for the next character we type, the value should be set to\n      // `-${newEntry}`\n      // we also preserve the prevWasMinus when the value is unchanged due\n      // to typing an invalid character (typing \"-a3\" results in \"-3\")\n      // same applies for the decimal character.\n\n      if (currentElement().type === 'number') {\n        const newValue = (0, _utils.getValue)(currentElement());\n\n        if (newValue === prevValue && newEntry !== '-') {\n          nextPrevWasMinus = prevWasMinus;\n        } else {\n          nextPrevWasMinus = newEntry === '-';\n        }\n\n        if (newValue === prevValue && newEntry !== '.') {\n          nextPrevWasPeriod = prevWasPeriod;\n        } else {\n          nextPrevWasPeriod = newEntry === '.';\n        }\n      }\n    }\n  }\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  return {\n    prevWasMinus: nextPrevWasMinus,\n    prevWasPeriod: nextPrevWasPeriod,\n    prevValue,\n    typedValue: textToBeTyped\n  };\n}\n\nfunction fireChangeForInputTimeIfValid(currentElement, prevValue, timeNewEntry) {\n  if ((0, _utils.isValidInputTimeValue)(currentElement(), timeNewEntry) && prevValue !== timeNewEntry) {\n    _dom.fireEvent.change(currentElement(), {\n      target: {\n        value: timeNewEntry\n      }\n    });\n  }\n} // yes, calculateNewBackspaceValue and calculateNewValue look extremely similar\n// and you may be tempted to create a shared abstraction.\n// If you, brave soul, decide to so endevor, please increment this count\n// when you inevitably fail: 1\n\n\nfunction calculateNewBackspaceValue(element) {\n  const {\n    selectionStart,\n    selectionEnd\n  } = (0, _utils.getSelectionRange)(element);\n  const value = (0, _utils.getValue)(element);\n  let newValue, newSelectionStart;\n\n  if (selectionStart === null) {\n    // at the end of an input type that does not support selection ranges\n    // https://github.com/testing-library/user-event/issues/316#issuecomment-639744793\n    newValue = value.slice(0, value.length - 1);\n    newSelectionStart = selectionStart - 1;\n  } else if (selectionStart === selectionEnd) {\n    if (selectionStart === 0) {\n      // at the beginning of the input\n      newValue = value;\n      newSelectionStart = selectionStart;\n    } else if (selectionStart === value.length) {\n      // at the end of the input\n      newValue = value.slice(0, value.length - 1);\n      newSelectionStart = selectionStart - 1;\n    } else {\n      // in the middle of the input\n      newValue = value.slice(0, selectionStart - 1) + value.slice(selectionEnd);\n      newSelectionStart = selectionStart - 1;\n    }\n  } else {\n    // we have something selected\n    const firstPart = value.slice(0, selectionStart);\n    newValue = firstPart + value.slice(selectionEnd);\n    newSelectionStart = firstPart.length;\n  }\n\n  return {\n    newValue,\n    newSelectionStart\n  };\n}\n\nfunction calculateNewDeleteValue(element) {\n  const {\n    selectionStart,\n    selectionEnd\n  } = (0, _utils.getSelectionRange)(element);\n  const value = (0, _utils.getValue)(element);\n  let newValue;\n\n  if (selectionStart === null) {\n    // at the end of an input type that does not support selection ranges\n    // https://github.com/testing-library/user-event/issues/316#issuecomment-639744793\n    newValue = value;\n  } else if (selectionStart === selectionEnd) {\n    if (selectionStart === 0) {\n      // at the beginning of the input\n      newValue = value.slice(1);\n    } else if (selectionStart === value.length) {\n      // at the end of the input\n      newValue = value;\n    } else {\n      // in the middle of the input\n      newValue = value.slice(0, selectionStart) + value.slice(selectionEnd + 1);\n    }\n  } else {\n    // we have something selected\n    const firstPart = value.slice(0, selectionStart);\n    newValue = firstPart + value.slice(selectionEnd);\n  }\n\n  return {\n    newValue,\n    newSelectionStart: selectionStart\n  };\n}\n\nfunction createModifierCallbackEntries({\n  name,\n  key,\n  keyCode,\n  modifierProperty\n}) {\n  const closeName = `{/${name}}`;\n\n  function open({\n    currentElement,\n    eventOverrides\n  }) {\n    const newEventOverrides = {\n      [modifierProperty]: true\n    };\n\n    _dom.fireEvent.keyDown(currentElement(), {\n      key,\n      keyCode,\n      which: keyCode,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n\n    return {\n      eventOverrides: newEventOverrides\n    };\n  }\n\n  open.closeName = closeName;\n  return {\n    [`{${name}}`]: open,\n    [closeName]: function ({\n      currentElement,\n      eventOverrides\n    }) {\n      const newEventOverrides = {\n        [modifierProperty]: false\n      };\n\n      _dom.fireEvent.keyUp(currentElement(), {\n        key,\n        keyCode,\n        which: keyCode,\n        ...eventOverrides,\n        ...newEventOverrides\n      });\n\n      return {\n        eventOverrides: newEventOverrides\n      };\n    }\n  };\n}\n\nfunction handleEnter({\n  currentElement,\n  eventOverrides\n}) {\n  const key = 'Enter';\n  const keyCode = 13;\n\n  const keyDownDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  if (keyDownDefaultNotPrevented) {\n    const keyPressDefaultNotPrevented = _dom.fireEvent.keyPress(currentElement(), {\n      key,\n      keyCode,\n      charCode: keyCode,\n      ...eventOverrides\n    });\n\n    if (keyPressDefaultNotPrevented) {\n      if ((0, _utils.isClickable)(currentElement())) {\n        _dom.fireEvent.click(currentElement(), { ...eventOverrides\n        });\n      }\n\n      if (currentElement().tagName === 'TEXTAREA') {\n        const {\n          newValue,\n          newSelectionStart\n        } = (0, _utils.calculateNewValue)('\\n', currentElement());\n\n        _dom.fireEvent.input(currentElement(), {\n          target: {\n            value: newValue\n          },\n          inputType: 'insertLineBreak',\n          ...eventOverrides\n        });\n\n        setSelectionRange({\n          currentElement,\n          newValue,\n          newSelectionStart\n        });\n      }\n\n      if (currentElement().tagName === 'INPUT' && currentElement().form && (currentElement().form.querySelectorAll('input').length === 1 || currentElement().form.querySelector('input[type=\"submit\"]') || currentElement().form.querySelector('button[type=\"submit\"]'))) {\n        _dom.fireEvent.submit(currentElement().form);\n      }\n    }\n  }\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\n\nfunction handleEsc({\n  currentElement,\n  eventOverrides\n}) {\n  const key = 'Escape';\n  const keyCode = 27;\n\n  _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  }); // NOTE: Browsers do not fire a keypress on meta key presses\n\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\n\nfunction handleDel({\n  currentElement,\n  eventOverrides\n}) {\n  const key = 'Delete';\n  const keyCode = 46;\n\n  const keyPressDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  if (keyPressDefaultNotPrevented) {\n    fireInputEventIfNeeded({ ...calculateNewDeleteValue(currentElement()),\n      eventOverrides: {\n        inputType: 'deleteContentForward',\n        ...eventOverrides\n      },\n      currentElement\n    });\n  }\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\n\nfunction handleBackspace({\n  currentElement,\n  eventOverrides\n}) {\n  const key = 'Backspace';\n  const keyCode = 8;\n\n  const keyPressDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  if (keyPressDefaultNotPrevented) {\n    fireInputEventIfNeeded({ ...calculateNewBackspaceValue(currentElement()),\n      eventOverrides: {\n        inputType: 'deleteContentBackward',\n        ...eventOverrides\n      },\n      currentElement\n    });\n  }\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\n\nfunction handleSelectall({\n  currentElement\n}) {\n  currentElement().setSelectionRange(0, (0, _utils.getValue)(currentElement()).length);\n}\n\nfunction handleSpace(context) {\n  if ((0, _utils.isClickable)(context.currentElement())) {\n    handleSpaceOnClickable(context);\n    return;\n  }\n\n  typeCharacter(' ', context);\n}\n\nfunction handleSpaceOnClickable({\n  currentElement,\n  eventOverrides\n}) {\n  const key = ' ';\n  const keyCode = 32;\n\n  const keyDownDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  if (keyDownDefaultNotPrevented) {\n    _dom.fireEvent.keyPress(currentElement(), {\n      key,\n      keyCode,\n      charCode: keyCode,\n      ...eventOverrides\n    });\n  }\n\n  const keyUpDefaultNotPrevented = _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  if (keyDownDefaultNotPrevented && keyUpDefaultNotPrevented) {\n    _dom.fireEvent.click(currentElement(), { ...eventOverrides\n    });\n  }\n}\n\nfunction handleArrowDown({\n  currentElement,\n  eventOverrides\n}) {\n  const key = 'ArrowDown';\n  const keyCode = 40;\n\n  _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\n\nfunction handleArrowUp({\n  currentElement,\n  eventOverrides\n}) {\n  const key = 'ArrowUp';\n  const keyCode = 38;\n\n  _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}"]},"metadata":{},"sourceType":"script"}