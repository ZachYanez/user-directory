{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zacharyyanez/bootcamp/user-directory/user-directory/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/api\";\nimport List from \"./Cards/List\";\nimport Navbar from \"./Navbar/Navbar\";\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      search: \"\",\n      results: [],\n      error: \"\"\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        search: e.target.value\n      });\n    };\n\n    this.firstNameDesc = () => {\n      const users = this.state.users.sort((a, b) => b.name.first.localeCompare(a.name.first));\n      this.setState({\n        users: users\n      });\n    };\n  }\n\n  // When the component mounts, get a list of all available users and update this.state.users\n  componentDidMount() {\n    API.getRandomUsers().then(res => {\n      this.setState({\n        users: res.data.results\n      });\n      console.log(res.data.results);\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      users,\n      search\n    } = this.state;\n    const filteredUsers = users.filter(user => user.name.last.toLowerCase().includes(search.toLowerCase()));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        handleChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        users: filteredUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/zacharyyanez/bootcamp/user-directory/user-directory/src/components/App.js"],"names":["React","Component","API","List","Navbar","Main","state","users","search","results","error","handleChange","e","setState","target","value","firstNameDesc","sort","a","b","name","first","localeCompare","componentDidMount","getRandomUsers","then","res","data","console","log","catch","err","render","filteredUsers","filter","user","last","toLowerCase","includes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAKA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBK,KADyB,GACjB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,OAAO,EAAE,EAHL;AAIJC,MAAAA,KAAK,EAAE;AAJH,KADiB;;AAAA,SAkBzBC,YAlByB,GAkBTC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AAAEL,QAAAA,MAAM,EAAEI,CAAC,CAACE,MAAF,CAASC;AAAnB,OAAd;AACD,KApBsB;;AAAA,SAsBzBC,aAtByB,GAsBT,MAAM;AAClB,YAAMT,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBU,IAAjB,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAClCA,CAAC,CAACC,IAAF,CAAOC,KAAP,CAAaC,aAAb,CAA2BJ,CAAC,CAACE,IAAF,CAAOC,KAAlC,CADY,CAAd;AAGA,WAAKR,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACD,KA3BsB;AAAA;;AAQzB;AACAgB,EAAAA,iBAAiB,GAAG;AAChBrB,IAAAA,GAAG,CAACsB,cAAJ,GACKC,IADL,CACUC,GAAG,IAAI;AACT,WAAKb,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAEmB,GAAG,CAACC,IAAJ,CAASlB;AAAlB,OAAd;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAJ,CAASlB,OAArB;AACH,KAJL,EAKKqB,KALL,CAKWC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CALlB;AAMH;;AAgBDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEzB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAoB,KAAKF,KAA/B;AAEA,UAAM2B,aAAa,GAAG1B,KAAK,CAAC2B,MAAN,CAAcC,IAAD,IACnCA,IAAI,CAACf,IAAL,CAAUgB,IAAV,CAAeC,WAAf,GAA6BC,QAA7B,CAAsC9B,MAAM,CAAC6B,WAAP,EAAtC,CADsB,CAAtB;AAKA,wBACI;AAAA,8BACI,QAAC,MAAD;AACA,QAAA,YAAY,EAAE,KAAK1B;AADnB;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEsB;AAAb;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA/CwB;;AAkD7B,eAAe5B,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/api\";\nimport List from \"./Cards/List\";\nimport Navbar from \"./Navbar/Navbar\";\n\n\n\n\nclass Main extends Component {\n    state = {\n        users: [],\n        search: \"\",\n        results: [],\n        error: \"\" \n    };\n\n    // When the component mounts, get a list of all available users and update this.state.users\n    componentDidMount() {\n        API.getRandomUsers()\n            .then(res => {\n                this.setState({ users: res.data.results })\n                console.log(res.data.results)\n            })\n            .catch(err => console.log(err));\n    }\n    \n    handleChange = (e) => {\n        this.setState({ search: e.target.value });\n      };\n\n    firstNameDesc = () => {\n        const users = this.state.users.sort((a, b) =>\n          b.name.first.localeCompare(a.name.first)\n        );\n        this.setState({ users: users });\n      };\n\n      \n\n\n    render() {\n        const { users, search } = this.state;\n\n        const filteredUsers = users.filter((user) =>\n        user.name.last.toLowerCase().includes(search.toLowerCase())\n      );\n\n    \n        return (\n            <div>\n                <Navbar \n                handleChange={this.handleChange}/>\n                <List users={filteredUsers}/>\n            </div>\n        );\n    }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}